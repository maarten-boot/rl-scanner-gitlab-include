# REQUIREMENTS:
#
# A) We expect the calling environment to define the License secrets required for rl-scanner
#
#  - RLSECURE_SITE_KEY:
#    must be declared as global variables type 'variable'
#
#  - RLSECURE_ENCODED_LICENSE:
#    must be declared as global variables type 'variable'
#
# B) We expect the calling pipeline to set the following 3 environment variables
#
# - MY_ARTIFACT_TO_SCAN:
#   The artifact we will be scanning (the file name)
#
# - PACKAGE_PATH:
#   The relative location (relative to the checkout) of the artifact we will scan,
#   we expect to find the artifact to scan at: ${PACKAGE_PATH}/${MY_ARTIFACT_TO_SCAN}
#
# - REPORT_PATH:
#   A location where the reports will be created, (relative to the checkout).
#   Best provide a empty directory as all data currently present in REPORT_PATH
#   will be deleted before the scan starts.

# If we have a local runner configured using the docker gitlab runner procedure,
# we can store scan results local and optionally perform diff scan with:
# RL_STORE
# RL_PACKAGE_URL
# RL_DIFF_WITH

# If the local runner needs to access the internet via a proxy we support that using:
# RL_PROXY_SERVER
# RL_PROXY_PORT
# RL_PROXY_USER
# RL_PROXY_PASSWORD

job-reversinglabs-rl-scanner:
  # This job will run in the test stage of the pipeline
  stage: test

  # We will run the reversinglabs/rl-scanner:latest Docker image,
  # but will use our own entry point to make it compatible with GitLab runner.
  image:
    name: reversinglabs/rl-scanner
    entrypoint: ["/bin/bash", "-c"]

  # The scan job will produce one artifact directory: REPORT_PATH
  # We will also upload the cyclonedx report separately as that is a supported report type by GitLab
  artifacts:
    name: "reversinglabs/rl-scanner/reports"
    when: always
    paths:
      - $REPORT_PATH/*
    reports:
      cyclonedx:
        - $REPORT_PATH/report.cyclonedx.json

  # Run the script to scan the provided artifact and produce a report.
  # Here we have access to all artifacts of the previous jobs (e.g. build).
  # This requires that the build step also defines artifacts.
  script:
    - |

